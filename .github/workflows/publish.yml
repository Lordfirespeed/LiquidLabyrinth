name: Publish

on:
  release:
    types: [prereleased, released]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
          fetch-depth: 0
          filter: tree:0

      - name: Setup .NET environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.100"
          
      - run: sudo apt-get install wget unzip

      - name: Restore solution
        run: |
          dotnet tool restore
          dotnet restore
          dotnet msbuild -t:FetchDependencies

      - name: Setup Netcode Patcher
        id: setup-netcode-patcher
        uses: Lordfirespeed/setup-netcode-patcher@v0.2.0
        with:
          netcode-patcher-version: 2.4.0
          deps-packages: '[{"id": "UnityEngine.Modules", "version": "2022.3.9"}, {"id": "LethalCompany.GameLibs.Steam", "version": "45.0.2-alpha.1"}]'
          deps-paths: '["lib/willis81808-LethalSettings/LethalSettings.dll", "lib/Evaisa-LethalLib/plugins/LethalLib/LethalLib.dll"]'
          target-framework: "netstandard2.1"

      - name: Publish solution
        run: dotnet publish -c Release -p:NETCODE_PATCHER_DIR="${{ steps.setup-netcode-patcher.outputs.netcode-patcher-directory }}"

      - name: Upload Thunderstore artifact
        uses: actions/upload-artifact@v4
        with:
          name: thunderstore-build
          path: dist/*.zip
  
  upload-release-artifacts:
    name: Upload Release Artifacts
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Upload artifacts to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.event.release.tag_name }} thunderstore-build/*.zip
  
  deploy-thunderstore:
    name: Deploy to Thunderstore
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4

      - name: Download Thunderstore artifact
        uses: actions/download-artifact@v4
        with:
          name: thunderstore-build
          path: ./dist

      - name: Validate artifact exists
        run: test -d ./dist

      - name: Setup .NET environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.100"

      - name: Install Tools
        run: dotnet tool restore

      - name: Publish to Thunderstore
        env:
          TCLI_AUTH_TOKEN: ${{ secrets.THUNDERSTORE_API_TOKEN }}
        run: |
          dotnet tcli publish --config-path ./assets/thunderstore.toml --file dist/*.zip 
